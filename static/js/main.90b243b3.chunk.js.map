{"version":3,"sources":["contexts/MainContext.js","components/Disk.js","components/Area.js","components/MainFrame.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["MainContext","createContext","MainContextProvider","props","state","setState","useState","moves","setMoves","numOfDisks","setNumOfDisks","React","createElement","Provider","value","generateArr","colors","sizes","hight","disks","i","length","push","id","color","height","children","Disk","_ref","disk","index","Draggable","draggableId","toString","key","provided","Object","assign","ref","innerRef","draggableProps","dragHandleProps","className","Area","data","dataKey","Fragment","Droppable","droppableId","droppableProps","placeholder","map","MainFrame","useContext","DragDropContext","onDragEnd","source","destination","prevSrcElem","srcElem","destElem","movable","console","log","tmpDisk","prev","splice","_","Home","useEffect","start","title","transition","end","Math","pow","alert","htmlFor","onChange","e","target","type","min","max","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.90b243b3.chunk.js","sourcesContent":["import React , {useState,createContext} from 'react';\n\n\nexport const MainContext = createContext();\n\n\nconst MainContextProvider = (props) =>{\n\n    const [state,setState]=useState({})\n\n    const [moves,setMoves] = useState(0);\n    const [numOfDisks,setNumOfDisks]=useState(3);\n\n    const generateArr = () =>{\n\n        const colors=['orange','teal','indigo','red','green','blue']\n        const sizes =[16,20,24,32,40,48];\n        const hight=[20,16,12,10];\n        const disks=[]\n\n        for(let i=sizes.length-numOfDisks;i<sizes.length;i++)\n        {\n           disks.push({\n               id:i,\n               value:sizes[i],\n               color:colors[i],\n               height:hight[numOfDisks-3]\n           })\n        }\n        \n        setMoves(0);\n        return disks\n    }\n    return (\n        <MainContext.Provider value={{\n            state,\n            setState,\n            moves,\n            setMoves,\n            numOfDisks,\n            setNumOfDisks,\n            generateArr,\n        }}>\n\n         {props.children}\n        </MainContext.Provider>\n    )\n}\n\nexport default MainContextProvider;","import React from 'react'\nimport {Draggable} from 'react-beautiful-dnd';\n\nconst  Disk = ({disk,index}) => {\n\n    return (\n        <div>\n            <Draggable draggableId={disk.id.toString()} index={index} key={disk.id.toString()}>\n                {\n                    (provided)=>{\n                        return(\n                            <div\n                                key={disk.id}\n                                ref={provided.innerRef}\n                                {...provided.draggableProps}\n                                {...provided.dragHandleProps}\n                                className=\"flex items-center justify-center\"\n                            >\n                                <div \n                                    className={\"w-\"+disk.value+\" bg-\"+disk.color+\"-400 rounded h-\"+disk.height+\" px-4 py-2\"}>\n\n                                </div>\n                            </div>\n                        )\n                    }\n                }\n            </Draggable>\n        </div>\n    )\n}\n\nexport default Disk;\n","import React from 'react'\nimport {Droppable} from 'react-beautiful-dnd';\nimport Disk from './Disk';\nconst Area = ({data,dataKey}) => {\n    return (\n        <>\n           <Droppable droppableId={dataKey}>\n               {\n                   (provided)=>{\n                       return(\n                           <div \n                                ref={provided.innerRef}\n                                {...provided.droppableProps}\n                                className=\"flex flex-col  justify-end  px-6 pt-4  h-64 border-b-gray-400 border-b-8 rounded\"\n                           >\n                               {provided.placeholder}\n                            {\n                                data.disks.map((disk,index)=>{\n                                    return <Disk disk={disk} index={index} key={disk.id}/>\n                                })\n                            }\n            \n                            </div>\n                       )\n                   }\n               }\n           </Droppable> \n        </>\n    )\n}\n\n\nexport default Area;","import React,{useContext} from 'react';\nimport {MainContext} from '../contexts/MainContext';\nimport {DragDropContext} from 'react-beautiful-dnd';\nimport _ from 'lodash';\nimport Area from './Area';\n\nconst MainFrame = () => {\n\n    const {state,setState,moves,setMoves}=useContext(MainContext);\n\n    const onDragEnd=({source,destination})=>{\n       \n    \n\n        if(!destination)\n            return;\n        \n\n        const prevSrcElem=state[source.droppableId].disks[source.index-1];\n        const srcElem=state[source.droppableId].disks[source.index];\n        const destElem=state[destination.droppableId].disks[destination.index];\n        console.log('src:',source,'\\ndest:',destination);\n        console.log('\\n');\n        console.log('srcElem :',srcElem,'\\ndestElem :',destElem);\n        let movable;\n        if(prevSrcElem)\n        {\n           movable=false;\n        }\n        else\n        {\n            if(destElem)\n            {\n                if(srcElem.value<destElem.value)\n                    movable=true;\n                else\n                    movable=false;\n            }\n            else{\n                if(state[destination.droppableId].disks.length)\n                    movable=false;\n                else\n                    movable=true;\n            }\n        }\n\n\n        if(movable)\n        {\n            const tmpDisk = state[source.droppableId].disks[source.index];\n        \n            setState(prev=>{\n                prev[source.droppableId].disks.splice(source.index,1);\n                prev[destination.droppableId].disks.splice(destination.index,0,tmpDisk);\n                setMoves(moves+1);\n                return prev;\n    \n            })\n        }\n    }\n    return (\n        <div className=\" md:grid grid-cols-3 gap-8 \">\n            <DragDropContext\n                onDragEnd={onDragEnd}\n            >\n                {\n                    _.map(state,(data,key)=>{\n                        return(\n                            <Area data={data} dataKey={key} key={key}/>\n                        )\n                    })\n                }\n            </DragDropContext>\n        </div>\n    )\n}\n\n\nexport default MainFrame;","import React,{useEffect,useContext} from 'react'\nimport MainFrame from './MainFrame';\nimport {MainContext} from '../contexts/MainContext'\nconst  Home = () => {\n    \n    const {state,setState,moves,setNumOfDisks,numOfDisks,generateArr} = useContext(MainContext);\n\n    const handleChange =(e)=>{\n        setNumOfDisks(e.target.value);\n    }\n\n    \n\n    useEffect(() => {\n        setState({\n            ...state,\n            start:{\n                title:'start',\n                disks:generateArr()\n            },\n        \n            transition:{\n                title:'transition',\n                disks:[]\n            },\n    \n            end:{\n                title:'end',\n                disks:[]\n            }\n            \n        })\n    }, [numOfDisks])\n\n    useEffect(()=>{\n        if(moves===Math.pow(2,numOfDisks)-1 && state['end'].disks.length === numOfDisks)\n            alert('Congrats, you have solved the Tower of Hanoi using the minimum number of steps. Increase the number of disks to make the puzzle more difficult');\n    },[moves])\n\n    return (\n        <>\n            <h1 className=\" text-center text-gray-400 mt-8  text-4xl font-semibold  capitalize tracking-wider\">Tower of Hanoi</h1>\n            <div className=\"row-start-2 row-end-8\">\n                <MainFrame/>\n            </div>\n            <div className=\"flex justify-center items-center space-x-24\">\n                <div>\n                    <label htmlFor=\"pieces\"  className=\"text-2xl  tracking-wide  text-gray-400\">Pieces : </label>\n                    <input \n                        onChange={handleChange}\n                        id=\"pieces\" className=\"px-2 py-2 rounded-md bg-gray-800 bg-opacity-50 text-gray-500\" type=\"number\" min=\"3\" max=\"6\" value={numOfDisks}/>\n                </div>\n                <span className=\"text-2xl  tracking-wide  text-gray-400 text-center\">Moves : {moves}</span>\n                <span className=\"text-2xl  tracking-wide  text-gray-400 text-center\">\n                    Expected : {Math.pow(2,numOfDisks)-1} <span className=\"text-sm\" >(moves)</span>\n                </span>\n            </div>\n        </>\n    )\n}\n\n\nexport default Home;","import React from 'react';\nimport './assets/css/app.css';\nimport Home from './components/Home';\nimport MainContextProvider from './contexts/MainContext'\n\n\nconst App = () => {\n\n\n  return (\n    <div className=\"App grid  bg-gray-900 px-10\">\n      <MainContextProvider>\n        <Home/>\n      </MainContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/style.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}